version: "3.9"

name: labelapp

services:
  url-app:
    container_name: url-app
    build:
      context: ./url_app
      dockerfile: Dockerfile
    depends_on:
      labelapp-postgres:
        condition: service_healthy
    volumes:
      - ./url_app/url_app:/url_app/url_app
    env_file:
      - .env

  dag-info:
    container_name: dag-info
    build:
      context: ./dag_info
      dockerfile: Dockerfile
    depends_on:
      labelapp-postgres:
        condition: service_healthy
    volumes:
      - ./dag_info/dag_info:/app/dag_info
    ports:
      - "3000:3000"
    env_file:
      - .env

  update-last-processed:
    container_name: update-last-processed
    build:
      context: ./update_last_processed
      dockerfile: Dockerfile
    depends_on:
      labelapp-postgres:
        condition: service_healthy
    volumes:
      - ./update_last_processed/update_last_processed:/app/update_last_processed
    ports:
      - "5000:5000"
    env_file:
      - .env

  labeling-app:
    container_name: labeling-app
    build:
      context: ./labeling_app
      dockerfile: Dockerfile
    depends_on:
      labelapp-postgres:
        condition: service_healthy
    volumes:
      - ./labeling_app/app:/labeling_app/app
    ports:
      - "4000:4000"
    env_file:
      - .env

  labelapp-postgres:
    container_name: labelapp-postgres
    image: postgres:latest
    privileged: true
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}" ]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
